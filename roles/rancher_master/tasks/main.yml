---
- name: Get local directory
  local_action: shell pwd
  register: local_dir

- name: Get gid
  local_action: shell id -g {{ ansible_user }}
  register: local_gid

- name: Create .rancher folder
  file:
    path: "{{ local_dir.stdout }}/{{ rancher_local_data_path }}"
    state: directory
    owner: "{{ ansible_user }}"
    mode: 0755

- name: Set gid permissions on .rancher folder
  shell: "chown -R :{{ local_gid.stdout }} .rancher"

- name: Make sure docker-py is installed
  pip:
    name: docker-py

- name: Pull and run the Rancher/server container
  docker:
    name: "{{ rancher_name }}"
    image: rancher/server:{{ rancher_version }}
    restart_policy: always
    volumes:
      - "{{ local_dir.stdout }}/{{ rancher_local_data_path }}:{{ rancher_container_data_path }}"
    ports:
      - "{{ rancher_port }}:8080"
  retries: 2

- name: Ensure no /etc/hosts for old Rancher FQDN entries
  lineinfile:
    dest: /etc/hosts
    state: absent
    regexp: "{{ rancher_fqdn }} {{ rancher_hosts_comment }}"

- name: Set /etc/hosts for Rancher FQDN
  lineinfile:
    dest: /etc/hosts
    regexp: ^{{ rancher_server }}
    line: "{{ rancher_server }} {{ rancher_fqdn }} {{ rancher_hosts_comment }}"

- name: Wait for the Rancher server to start
  action: command docker logs {{ rancher_name }}
  register: rancher_logs
  until: rancher_logs.stdout.find("Listening on") != -1
  retries: 30
  delay: 10

- name: Print Rancher's URL
  debug:
    msg: "You can connect to rancher server http://{{ rancher_fqdn }}:{{ rancher_port }}"
